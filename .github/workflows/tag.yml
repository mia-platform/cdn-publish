name: Tag CI

env:
  context: './'
  cache-name: cache-release
  node-version: 18.x
  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    tags:
      - 'v**'

jobs:
  next-version:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    
    steps:
      - name: Compute tag version
        id: get-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$(echo ${VERSION} | sed s/^v//)" >> $GITHUB_OUTPUT

  prepare:
    uses: mia-platform/cdn-publish/.github/workflows/prepare.yml@main

  release-docker:
    needs:
      - next-version
      - prepare

    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    uses: mia-platform/cdn-publish/.github/workflows/release-docker.yml@main
    with:
      push: true
      version: ${{ needs.next-version.outputs.version }}
    secrets:
      username: ${{ secrets.BOT_DOCKER_USERNAME }}
      token: ${{ secrets.BOT_DOCKER_TOKEN }}

  release-package:
    needs:
      - prepare
    name: Release package on npm
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false

      - name: Extract tag name
        id: extract_tag
        shell: bash
        run: echo "tag=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT

      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ inputs.node-version }}
          check-latest: true

      - name: Install
        run: yarn install --immutable

      - name: Build Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: build-cache
        with:
          path: |
            ./dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Prepare NPM
        id: prepare-npm-package
        run: |
          TAGS=${{ steps.extract_tag.outputs.tag }}
          echo "package=$(echo $TAGS | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Build
        run: yarn build

      - name: Publish
        run: yarn npm publish
