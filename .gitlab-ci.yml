# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  GIT_DEPTH: 10
  GIT_SUBMODULE_STRATEGY: recursive
  ARTIFACT_COMPRESSION_LEVEL: fastest
  FF_USE_FASTZIP: 1
  NEXUS_URL: nexus.mia-platform.eu
  IMAGE_NAME: back-kit/mystery-box

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

default:
  retry:
    max: 1
    when:
      - runner_system_failure
      - scheduler_failure
  services:
    - name: docker:20-dind
      alias: docker
  image: node:18-alpine

".install-cache": &install_cache
  key:
    files:
      - yarn.lock
  paths:
    - node_modules/
    - .yarn/

".build-cache": &build_cache
  key: $CI_COMMIT_REF_SLUG
  paths:
    - dist

prepare:
  stage: .pre
  cache:
    - <<: *install_cache
  script:
    - yarn install --immutable

sast:
  needs: []
  stage: test

lint:
  stage: test
  needs:
    - prepare
  cache:
    <<: *install_cache
    policy: pull
  before_script:
    - yarn install --immutable
  script:
    - yarn lint

check-types:
  stage: test
  needs:
    - prepare
  cache:
    <<: *install_cache
    policy: pull
  before_script:
    - yarn install --immutable
  script:
    - yarn check-types

unit-tests:
  stage: test
  needs:
    - prepare
  cache:
    <<: *install_cache
    policy: pull
  before_script:
    - yarn install --immutable
  script:
    - yarn coverage
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

build-cli:
  stage: build
  needs:
    - prepare
  cache:
    <<: *build_cache
    policy: push
  before_script:
    - yarn install --immutable
  script:
    - yarn build

build-container:
  stage: build
  needs:
    - build-cli
  cache:
    <<: *build_cache
    policy: pull
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG =~ /^v/
  image: docker:20.10.24
  variables:
    REMOTE_IMAGE_NAME: $NEXUS_URL/$IMAGE_NAME
    DOCKER_TAG: latest
  before_script:
    - test -z "$CI_COMMIT_TAG" || export DOCKER_TAG=$(echo $CI_COMMIT_TAG | sed s/^v//)
  script:
    - |
      docker build \
        --file .docker/Dockerfile \
        --build-arg COMMIT_SHA=$CI_COMMIT_SHA \
        --build-arg VERSION=$DOCKER_TAG \
        --tag $REMOTE_IMAGE_NAME:$DOCKER_TAG \
        .
    - test -z "$COMMIT_SHA_FILEPATH" || docker run --rm $REMOTE_IMAGE_NAME:$DOCKER_TAG
      cat $COMMIT_SHA_FILEPATH
    - |
      if [ -n "${SYSDIG_SECURE_TOKEN}" ] && [ -n "${SYSDIG_SECURE_BACKEND_ENDPOINT}" ]; then
        docker run \
          --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          quay.io/sysdig/secure-inline-scan:2 \
          --sysdig-token "${SYSDIG_SECURE_TOKEN}" \
          --sysdig-url "${SYSDIG_SECURE_BACKEND_ENDPOINT}" \
          --storage-type docker-daemon \
          --storage-path /var/run/docker.sock \
          ${REMOTE_IMAGE_NAME}:${DOCKER_TAG}
      fi
    - docker login -u ${NEXUS_USER} -p ${NEXUS_TOKEN} ${NEXUS_URL}
    - |
      if [ "$CI_PIPELINE_SOURCE" != "merge_request_event" ]; then
        docker push ${REMOTE_IMAGE_NAME}:${DOCKER_TAG}
      fi
